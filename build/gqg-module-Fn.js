"use strict";
/*
 * Copyright 2020 Carson Cheng
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 */
// What is this and why?  Because CORS prevent use of modules locally:
// https://stackoverflow.com/questions/50197495/javascript-modules-and-cors
const exportedNames = [
    "PLAYGROUND_HEIGHT",
    "PLAYGROUND_WIDTH",
    "consolePrint",
    "createCircle",
    "createCircleInGroup",
    "createContainerIterator",
    "createGraph",
    "createGraphInGroup",
    "createGraphWithOptions",
    "createGroupInPlayground",
    "createInterpolatedGraph",
    "createInterpolatedGraphInGroup",
    "createLine",
    "createLineInGroup",
    "createOval",
    "createOvalInGroup",
    "createRect",
    "createRectInGroup",
    "createSpriteInGroup",
    "createTextInputSpriteInGroup",
    "createTextSpriteInGroup",
    "currentDate",
    "deleteSavedDictionary",
    "disableContextMenu",
    "drawCircle",
    "drawGraph",
    "drawInterpolatedGraph",
    "drawLine",
    "drawOval",
    "drawRect",
    "enableContextMenu",
    "forEachSpriteSpriteCollisionDo",
    "forEach2SpritesHit",
    "when2SpritesHit",
    "forEachSpriteFilteredCollisionDo",
    "forEachSpriteFilteredHit",
    "forEachSpriteGroupCollisionDo",
    "forEachSpriteGroupHit",
    "getKeyState",
    "getMouseButton1",
    "getMouseButton2",
    "getMouseButton3",
    "getMouseX",
    "getMouseY",
    "getSavedDictionary",
    "hideMouseCursor",
    "newGQAnimation",
    "removeSprite",
    "saveDictionaryAs",
    "setGqDebugFlag",
    "setGqPlaygroundDimensions",
    "showMouseCursor",
    "sprite",
    "spriteExists",
    "spriteGetHeight",
    "spriteGetWidth",
    "spriteGetX",
    "spriteGetY",
    "spriteGetZ",
    "spriteGroupNameFormatIsValid",
    "spriteHitDir",
    "spriteHitDirection",
    "spriteId",
    "spriteObject",
    "spritePauseAnimation",
    "spriteResumeAnimation",
    "spriteGetFlipVertical",
    "spriteGetFlipHorizontal",
    "spriteFlipVertical",
    "spriteFlipHorizontal",
    "spriteRotate",
    "spriteScale",
    "spriteSetAnimation",
    "spriteSetHeight",
    "spriteSetWidth",
    "spriteSetWidthHeight",
    "spriteSetX",
    "spriteSetXY",
    "spriteSetXYZ",
    "spriteSetY",
    "spriteSetZ",
    "textInputSpriteReset",
    "textInputSpriteSetHandler",
    "textInputSpriteSetString",
    "textInputSpriteString",
    "textInputSpriteSubmitted",
    "throwOnImgLoadError",
    "ANIMATION_HORIZONTAL",
    "ANIMATION_VERTICAL",
    "ANIMATION_ONCE",
    "ANIMATION_PINGPONG",
    "ANIMATION_CALLBACK",
    "ANIMATION_MULTI",
    "Xsound"
];
const Fn = {};
for (let x of exportedNames) {
    Fn[x] = eval(x);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3FnLW1vZHVsZS1Gbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImdxZy1tb2R1bGUtRm4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7OztHQUtHO0FBRUgsc0VBQXNFO0FBQ3RFLDJFQUEyRTtBQUUzRSxNQUFNLGFBQWEsR0FBRztJQUNsQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxjQUFjO0lBQ2QscUJBQXFCO0lBQ3JCLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2Isb0JBQW9CO0lBQ3BCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIseUJBQXlCO0lBQ3pCLGdDQUFnQztJQUNoQyxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsOEJBQThCO0lBQzlCLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG9CQUFvQjtJQUNwQixZQUFZO0lBQ1osV0FBVztJQUNYLHVCQUF1QjtJQUN2QixVQUFVO0lBQ1YsVUFBVTtJQUNWLFVBQVU7SUFDVixtQkFBbUI7SUFDbkIsZ0NBQWdDO0lBQ2hDLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsa0NBQWtDO0lBQ2xDLDBCQUEwQjtJQUMxQiwrQkFBK0I7SUFDL0IsdUJBQXVCO0lBQ3ZCLGFBQWE7SUFDYixpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gsV0FBVztJQUNYLG9CQUFvQjtJQUNwQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLDJCQUEyQjtJQUMzQixpQkFBaUI7SUFDakIsUUFBUTtJQUNSLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLDhCQUE4QjtJQUM5QixjQUFjO0lBQ2Qsb0JBQW9CO0lBQ3BCLFVBQVU7SUFDVixjQUFjO0lBQ2Qsc0JBQXNCO0lBQ3RCLHVCQUF1QjtJQUN2Qix1QkFBdUI7SUFDdkIseUJBQXlCO0lBQ3pCLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsY0FBYztJQUNkLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFDdEIsWUFBWTtJQUNaLGFBQWE7SUFDYixjQUFjO0lBQ2QsWUFBWTtJQUNaLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsMkJBQTJCO0lBQzNCLDBCQUEwQjtJQUMxQix1QkFBdUI7SUFDdkIsMEJBQTBCO0lBQzFCLHFCQUFxQjtJQUNyQixzQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsb0JBQW9CO0lBQ3BCLGlCQUFpQjtJQUNqQixRQUFRO0NBQ1gsQ0FBQztBQUVGLE1BQU0sRUFBRSxHQUF3QixFQUFFLENBQUM7QUFDbkMsS0FBSyxJQUFJLENBQUMsSUFBSSxhQUFhLEVBQUU7SUFDekIsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztDQUNuQiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBDYXJzb24gQ2hlbmdcbiAqIFRoaXMgU291cmNlIENvZGUgRm9ybSBpcyBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgTW96aWxsYSBQdWJsaWNcbiAqIExpY2Vuc2UsIHYuIDIuMC4gSWYgYSBjb3B5IG9mIHRoZSBNUEwgd2FzIG5vdCBkaXN0cmlidXRlZCB3aXRoIHRoaXNcbiAqIGZpbGUsIFlvdSBjYW4gb2J0YWluIG9uZSBhdCBodHRwczovL21vemlsbGEub3JnL01QTC8yLjAvLlxuICovXG5cbi8vIFdoYXQgaXMgdGhpcyBhbmQgd2h5PyAgQmVjYXVzZSBDT1JTIHByZXZlbnQgdXNlIG9mIG1vZHVsZXMgbG9jYWxseTpcbi8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzUwMTk3NDk1L2phdmFzY3JpcHQtbW9kdWxlcy1hbmQtY29yc1xuXG5jb25zdCBleHBvcnRlZE5hbWVzID0gW1xuICAgIFwiUExBWUdST1VORF9IRUlHSFRcIixcbiAgICBcIlBMQVlHUk9VTkRfV0lEVEhcIixcbiAgICBcImNvbnNvbGVQcmludFwiLFxuICAgIFwiY3JlYXRlQ2lyY2xlXCIsXG4gICAgXCJjcmVhdGVDaXJjbGVJbkdyb3VwXCIsXG4gICAgXCJjcmVhdGVDb250YWluZXJJdGVyYXRvclwiLFxuICAgIFwiY3JlYXRlR3JhcGhcIixcbiAgICBcImNyZWF0ZUdyYXBoSW5Hcm91cFwiLFxuICAgIFwiY3JlYXRlR3JhcGhXaXRoT3B0aW9uc1wiLFxuICAgIFwiY3JlYXRlR3JvdXBJblBsYXlncm91bmRcIixcbiAgICBcImNyZWF0ZUludGVycG9sYXRlZEdyYXBoXCIsXG4gICAgXCJjcmVhdGVJbnRlcnBvbGF0ZWRHcmFwaEluR3JvdXBcIixcbiAgICBcImNyZWF0ZUxpbmVcIixcbiAgICBcImNyZWF0ZUxpbmVJbkdyb3VwXCIsXG4gICAgXCJjcmVhdGVPdmFsXCIsXG4gICAgXCJjcmVhdGVPdmFsSW5Hcm91cFwiLFxuICAgIFwiY3JlYXRlUmVjdFwiLFxuICAgIFwiY3JlYXRlUmVjdEluR3JvdXBcIixcbiAgICBcImNyZWF0ZVNwcml0ZUluR3JvdXBcIixcbiAgICBcImNyZWF0ZVRleHRJbnB1dFNwcml0ZUluR3JvdXBcIixcbiAgICBcImNyZWF0ZVRleHRTcHJpdGVJbkdyb3VwXCIsXG4gICAgXCJjdXJyZW50RGF0ZVwiLFxuICAgIFwiZGVsZXRlU2F2ZWREaWN0aW9uYXJ5XCIsXG4gICAgXCJkaXNhYmxlQ29udGV4dE1lbnVcIixcbiAgICBcImRyYXdDaXJjbGVcIixcbiAgICBcImRyYXdHcmFwaFwiLFxuICAgIFwiZHJhd0ludGVycG9sYXRlZEdyYXBoXCIsXG4gICAgXCJkcmF3TGluZVwiLFxuICAgIFwiZHJhd092YWxcIixcbiAgICBcImRyYXdSZWN0XCIsXG4gICAgXCJlbmFibGVDb250ZXh0TWVudVwiLFxuICAgIFwiZm9yRWFjaFNwcml0ZVNwcml0ZUNvbGxpc2lvbkRvXCIsXG4gICAgXCJmb3JFYWNoMlNwcml0ZXNIaXRcIixcbiAgICBcIndoZW4yU3ByaXRlc0hpdFwiLFxuICAgIFwiZm9yRWFjaFNwcml0ZUZpbHRlcmVkQ29sbGlzaW9uRG9cIixcbiAgICBcImZvckVhY2hTcHJpdGVGaWx0ZXJlZEhpdFwiLFxuICAgIFwiZm9yRWFjaFNwcml0ZUdyb3VwQ29sbGlzaW9uRG9cIixcbiAgICBcImZvckVhY2hTcHJpdGVHcm91cEhpdFwiLFxuICAgIFwiZ2V0S2V5U3RhdGVcIixcbiAgICBcImdldE1vdXNlQnV0dG9uMVwiLFxuICAgIFwiZ2V0TW91c2VCdXR0b24yXCIsXG4gICAgXCJnZXRNb3VzZUJ1dHRvbjNcIixcbiAgICBcImdldE1vdXNlWFwiLFxuICAgIFwiZ2V0TW91c2VZXCIsXG4gICAgXCJnZXRTYXZlZERpY3Rpb25hcnlcIixcbiAgICBcImhpZGVNb3VzZUN1cnNvclwiLFxuICAgIFwibmV3R1FBbmltYXRpb25cIixcbiAgICBcInJlbW92ZVNwcml0ZVwiLFxuICAgIFwic2F2ZURpY3Rpb25hcnlBc1wiLFxuICAgIFwic2V0R3FEZWJ1Z0ZsYWdcIixcbiAgICBcInNldEdxUGxheWdyb3VuZERpbWVuc2lvbnNcIixcbiAgICBcInNob3dNb3VzZUN1cnNvclwiLFxuICAgIFwic3ByaXRlXCIsXG4gICAgXCJzcHJpdGVFeGlzdHNcIixcbiAgICBcInNwcml0ZUdldEhlaWdodFwiLFxuICAgIFwic3ByaXRlR2V0V2lkdGhcIixcbiAgICBcInNwcml0ZUdldFhcIixcbiAgICBcInNwcml0ZUdldFlcIixcbiAgICBcInNwcml0ZUdldFpcIixcbiAgICBcInNwcml0ZUdyb3VwTmFtZUZvcm1hdElzVmFsaWRcIixcbiAgICBcInNwcml0ZUhpdERpclwiLFxuICAgIFwic3ByaXRlSGl0RGlyZWN0aW9uXCIsXG4gICAgXCJzcHJpdGVJZFwiLFxuICAgIFwic3ByaXRlT2JqZWN0XCIsXG4gICAgXCJzcHJpdGVQYXVzZUFuaW1hdGlvblwiLFxuICAgIFwic3ByaXRlUmVzdW1lQW5pbWF0aW9uXCIsXG4gICAgXCJzcHJpdGVHZXRGbGlwVmVydGljYWxcIixcbiAgICBcInNwcml0ZUdldEZsaXBIb3Jpem9udGFsXCIsXG4gICAgXCJzcHJpdGVGbGlwVmVydGljYWxcIixcbiAgICBcInNwcml0ZUZsaXBIb3Jpem9udGFsXCIsXG4gICAgXCJzcHJpdGVSb3RhdGVcIixcbiAgICBcInNwcml0ZVNjYWxlXCIsXG4gICAgXCJzcHJpdGVTZXRBbmltYXRpb25cIixcbiAgICBcInNwcml0ZVNldEhlaWdodFwiLFxuICAgIFwic3ByaXRlU2V0V2lkdGhcIixcbiAgICBcInNwcml0ZVNldFdpZHRoSGVpZ2h0XCIsXG4gICAgXCJzcHJpdGVTZXRYXCIsXG4gICAgXCJzcHJpdGVTZXRYWVwiLFxuICAgIFwic3ByaXRlU2V0WFlaXCIsXG4gICAgXCJzcHJpdGVTZXRZXCIsXG4gICAgXCJzcHJpdGVTZXRaXCIsXG4gICAgXCJ0ZXh0SW5wdXRTcHJpdGVSZXNldFwiLFxuICAgIFwidGV4dElucHV0U3ByaXRlU2V0SGFuZGxlclwiLFxuICAgIFwidGV4dElucHV0U3ByaXRlU2V0U3RyaW5nXCIsXG4gICAgXCJ0ZXh0SW5wdXRTcHJpdGVTdHJpbmdcIixcbiAgICBcInRleHRJbnB1dFNwcml0ZVN1Ym1pdHRlZFwiLFxuICAgIFwidGhyb3dPbkltZ0xvYWRFcnJvclwiLFxuICAgIFwiQU5JTUFUSU9OX0hPUklaT05UQUxcIixcbiAgICBcIkFOSU1BVElPTl9WRVJUSUNBTFwiLFxuICAgIFwiQU5JTUFUSU9OX09OQ0VcIixcbiAgICBcIkFOSU1BVElPTl9QSU5HUE9OR1wiLFxuICAgIFwiQU5JTUFUSU9OX0NBTExCQUNLXCIsXG4gICAgXCJBTklNQVRJT05fTVVMVElcIixcbiAgICBcIlhzb3VuZFwiXG5dO1xuXG5jb25zdCBGbjogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9O1xuZm9yIChsZXQgeCBvZiBleHBvcnRlZE5hbWVzKSB7XG4gICAgRm5beF0gPSBldmFsKHgpO1xufVxuIl19